type AuthenticatedUser {
    jwt: String!
    user: User!
}

type User {
    id: String!
    username: String!
    email: String
    verified: Boolean!
    img: String
    lastLoginAt: Date
}

type Token {
    userId: String!
    code: Int!
    expiryDate: Date!
}

input InputCreateUser {
    username: String!
    email: String
    img: String
}

input InputUpdateUser {
    id: String!
    username: String
    email: String
    verified: Boolean
    token: String
    img: String
    lastLoginAt: Date
}

input InputValidateToken {
    email: String!
    code: Int!
}

fragment User on User {
    id
    username
    email
    verified
    img
    lastLoginAt
}

type Mutation {
    validateUserEmail(email: String!): Boolean!
    validateUserToken(input: InputValidateToken!): AuthenticatedUser!
}
